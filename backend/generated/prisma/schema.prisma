generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
  output        = "../generated/prisma"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model user {
  id         String  @id @default(uuid())
  username   String? @db.Text
  usersecret String? @db.Text
  authority  String? @db.Text
}

model department {
  id    String @id @default(uuid())
  name  String @unique
  items item[]
  carts cart[]
}

model item {
  id           String     @id @unique @default(uuid())
  name         String
  departmentId String
  department   department @relation(fields: [departmentId], references: [id])
}

model cart {
  id                  Int        @id @unique @default(autoincrement())
  date                String
  day                 String
  machineEnteringTime String?
  machineLeavingTime  String?
  sterilazationState  String?
  departmentId        String
  department          department @relation(fields: [departmentId], references: [id])
  items               cartItem[]
}

model cartItem {
  id                       String @id @unique @default(uuid())
  name                     String
  quantity                 Int
  date                     String
  deliveringTime           String
  preSterilizationClient   String
  preSterilazationProvidor String
  toolState                String
  cartId                   Int
  cart                     cart   @relation(fields: [cartId], references: [id])
}

model device {
  id       String            @id @unique @default(uuid())
  name     String
  sessions deviseSesstions[]
}

model deviseSesstions {
  id            Int    @id @unique @default(autoincrement())
  date          String
  startingTime  String
  stoppingTime  String
  itemsQuantity Int?
  deviceId      String
  device        device @relation(fields: [deviceId], references: [id])
}
